
# 分表配置
# 数据按照id取模分片在 ds01 库的 tb_order01、tb_order02
spring.shardingsphere.datasource.names=ds0
spring.shardingsphere.datasource.ds0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds0.url=jdbc:mysql://localhost:3306/db01?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=UTC
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=root

# 表分布
spring.shardingsphere.sharding.tables.tb_order.actual-data-nodes=ds0.tb_order0$->{1..2}
# 主键字段及生产主键的策略
spring.shardingsphere.sharding.tables.tb_order.key-generator.column=id
spring.shardingsphere.sharding.tables.tb_order.key-generator.type=SNOWFLAKE

# 表分片字段 及 表分片策略
spring.shardingsphere.sharding.tables.tb_order.table-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.tables.tb_order.table-strategy.inline.algorithm-expression=tb_order0$->{id%2+1}

# 显示SQL
spring.shardingsphere.props.sql.show=true

# inline 是精确分片策略，只能配置精确查找策略，支持 = 、in 查询，不支持范围查询


