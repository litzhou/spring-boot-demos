
# 分库且分表配置 inline（行表达式分片）策略
# 支持等值、in 查询，不支持范围查询
# 分库按照 id 取模分配到 ds01,ds02
# 分表按照 id 取模分配到 ds01.tb_order01，ds01.tb_order02，ds02.tb_order01，ds02.tb_order02
spring.shardingsphere.datasource.names=ds01,ds02

spring.shardingsphere.datasource.ds01.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds01.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds01.url=jdbc:mysql://localhost:3306/db01?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=UTC
spring.shardingsphere.datasource.ds01.username=root
spring.shardingsphere.datasource.ds01.password=root

spring.shardingsphere.datasource.ds02.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds02.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds02.url=jdbc:mysql://localhost:3306/db02?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=UTC
spring.shardingsphere.datasource.ds02.username=root
spring.shardingsphere.datasource.ds02.password=root

# 表分布
spring.shardingsphere.sharding.tables.tb_order.actual-data-nodes=ds0$->{1..2}.tb_order0$->{1..2}
# 主键字段及生产主键的策略
spring.shardingsphere.sharding.tables.tb_order.key-generator.column=id
spring.shardingsphere.sharding.tables.tb_order.key-generator.type=SNOWFLAKE

## 表分片字段 及 表分片策略
spring.shardingsphere.sharding.tables.tb_order.table-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.tables.tb_order.table-strategy.inline.algorithm-expression=tb_order0$->{id%2+1}

## 库分片字段 及 表分片策略
spring.shardingsphere.sharding.tables.tb_order.database-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.tables.tb_order.database-strategy.inline.algorithm-expression=ds0$->{id%2+1}

spring.shardingsphere.props.sql.show=true

# inline 是精确分片策略，只能配置精确查找策略，支持 = 、in 查询，不支持范围查询

